{
  "id" : 159,
  "originalProgramId" : 7,
  "mutationOperator" : "MTR",
  "mutationOperatorDescription" : "Mapping Transformation Replacement",
  "mutantCode" : "def sameHostProblem(firstLogs: RDD[String], secondLogs: RDD[String]): RDD[String] = {\n  val firstHosts: RDD[String] = firstLogs.map(parseLogs)\n  val secondHosts: RDD[String] = secondLogs.map { (inputParameter: String) => {\n    val originalFunction = parseLogs(_)\n    val originalValue = originalFunction(inputParameter)\n    \"\"\n  } }\n  val intersection: RDD[String] = firstHosts.intersection(secondHosts)\n  val cleanedHostIntersection: RDD[String] = intersection.filter(host => isNotHeaderHost(host))\n  cleanedHostIntersection\n}",
  "originalCode" : "def sameHostProblem(firstLogs: RDD[String], secondLogs: RDD[String]): RDD[String] = {\n    val firstHosts: RDD[String] = firstLogs.map(parseLogs)\n    val secondHosts: RDD[String] = secondLogs.map(parseLogs)\n    val intersection: RDD[String] = firstHosts.intersection(secondHosts)\n    val cleanedHostIntersection: RDD[String] = intersection.filter(host => isNotHeaderHost(host))\n    cleanedHostIntersection\n  }",
  "status" : "Lived"
}